/*
 * fan.h
 *
 * Created: 21.09.2015 15:49:46
 *  Author: gargon
 */ 


#ifndef FAN_H_

#include "fan_config.h"
#include "utils/bits.h"
	
/************************************************************************/
/* Состояния вентилятора											    */
/************************************************************************/
#define FAN_STATE_WAITING 1
#define FAN_STATE_REQUIRED 2
#define FAN_STATE_AUTO 3
#define FAN_STATE_MANUAL 4
	
/************************************************************************/
/* Входной алфавит событий управления вентилятором                      */
/************************************************************************/

//Ручное управление (переключение)
#define FAN_ACTION_BUTTON 1
//Резкий рост значения влажности, определенный с помощью датчика
#define FAN_ACTION_SENSOR_RISED 2
//Высокое абсолютное значения влажности, определенное с помощью датчика
#define FAN_ACTION_SENSOR_MAX_ABS 3
//Нормализация значения влажности (после резкого роста), определенная с помощью датчика
#define FAN_ACTION_SENSOR_NORMALIZED 4
//Сигнал о появлении высокого уровня освещенности помещения
#define FAN_ACTION_TRIGGER_ON 5
//Сигнал о появлении низкого уровня освещенности помещения
#define FAN_ACTION_TRIGGER_OFF 6
//Таймаут таймера
#define FAN_ACTION_TIMER 7
	
	
struct fan_info_struct{
	char state;
	char history_humidity[HUMIDITY_HISTORY_COUNT];
	char normal_humidity;
	unsigned int timer_remains;
};
	
	
/************************************************************************/
/*  Инициализация модуля автоматического управления вентилятором		*/
/************************************************************************/
void fan_init();

/************************************************************************/
/*  Вызывать при нажатии кнопки вкл/выкл вентилятора					*/
/************************************************************************/
void fan_button();	

/************************************************************************/
/*  Вызывать для передачи нового значения уровня влажности				*/
/************************************************************************/
void fan_humidity(signed char humidityValue);

/************************************************************************/
/*  Вызывать при изменении уровня освещения в помещении					*/
/************************************************************************/
void fan_trigger(char on_);

/************************************************************************/
/*  Возвращает текущие параметры работы вентилятора (для отладки)       */
/************************************************************************/
void fan_info(struct fan_info_struct* i);

/*******************************************************************************************************/
/*Установка функции, которая вызывается при необходимости следующего запроса текущего значения уровня влажности   */
/*******************************************************************************************************/ 
void fan_set_on_humidity_request(void (*f)());

/*******************************************************************************/
/*Установка функции, которая вызывается для управления вкл/выкл вентилятором   */
/*******************************************************************************/
void fan_set_on_control_changed(void (*f)(char on_));

/***********************************************************************************************************/
/*Установка функции, которая вызывается для определения моментов времени изменения состояния вентилятора   */
/* (для отладки)																						   */
/***********************************************************************************************************/
void fan_set_on_state_changed(void (*f)(char state));

	
#define FAN_H_





#endif /* FAN_H_ */