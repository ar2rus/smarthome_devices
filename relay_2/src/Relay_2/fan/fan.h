/*
 * fan.h
 *
 * Created: 21.09.2015 15:49:46
 *  Author: gargon
 */ 


#ifndef FAN_H_

#include "fan_config.h"
#include "utils/bits.h"
	
/************************************************************************/
/* Состояния вентилятора											    */
/************************************************************************/

//режим ожидания
#define FAN_STATE_WAITING 1
//требуется включение вентилятора (авт. режим)
#define FAN_STATE_REQUIRED 2
//вентилятор включен (авт. режим)
#define FAN_STATE_IN_PROGRESS_AUTO 3
//вентилятор включен (ручн. режим)
#define FAN_STATE_IN_PROGRESS_MANUAL 4
	

/************************************************************************/
/* Cобытия																*/
/************************************************************************/

//Включение автомат. режима
#define FAN_ACTION_ENABLE_AUTO	 1
//Отключение автомат. режима
#define FAN_ACTION_DISABLE_AUTO	 2
//Триггер переключения ручного управления
#define FAN_ACTION_TRIGGER_TOGGLE_MANUAL 3
//Резкий прирост значения влажности, определенный с помощью датчика
#define FAN_ACTION_SENSOR_RISED 4
//Высокое абсолютное значения влажности, определенное с помощью датчика
#define FAN_ACTION_SENSOR_MAX_ABS 5
//Нормализация значения влажности (после резкого роста), определенная с помощью датчика
#define FAN_ACTION_SENSOR_NORMALIZED 6
//Триггер включения автомат. управления (например выкл. свет)
#define FAN_ACTION_TRIGGER_ON_AUTO 7
//Триггер выключения автомат. управления (например вкл. свет)
#define FAN_ACTION_TRIGGER_OFF_AUTO 8
//Таймаут таймера работы вентилятора
#define FAN_ACTION_TIMER 9
	
struct fan_info_struct{
	char mode;	//режим работы: 0 - только ручной; 1 - ручной и авто
	char state;
	char history_humidity[HUMIDITY_HISTORY_COUNT];
	char normal_humidity;
	unsigned int timer_remains;
};
	
	
/*************************************************************************/
/*  Инициализация модуля управления вентилятором						 */
/*		fan_humidity_request - коллбэк функция запроса текущей влажности */
/*			и в ней параметр - тоже колбэк функция ответа на запрос-	 */ 
/*			значение влажности											 */
/*		fan_control_change_request - коллбэк функция управления реле	 */
/*************************************************************************/
void fan_init(void (*fan_humidity_request)( void (*fan_humidity_asynch_response)(signed char humidityValue) ) , void (*fan_control_change_request)(char on_));

/*************************************************************************/
/*  Установка режима: 0 - только ручной; 1-ручной и авто				 */
/*************************************************************************/
void fan_mode(char enable);

/******************************************************************************/
/*  Вызывать при нажатии кнопки вкл/выкл вентилятора (триггер ручного режима) */
/******************************************************************************/
void fan_button();

/***********************************************************************************/
/*  Вызывать при изменении уровня освещения в помещении	(триггер автомат. режима)  */
/***********************************************************************************/
void fan_trigger(char on_);

/************************************************************************/
/*  Вызывать при прохождении секунды системного времени, измеренной		*/
/*	внешним таймером													*/
/************************************************************************/
void fan_tick_second();

/************************************************************************/
/*  Возвращает текущие параметры работы вентилятора (для отладки)       */
/************************************************************************/
void fan_info(struct fan_info_struct* i);

/***********************************************************************************************************/
/*Установка функции, которая вызывается для определения моментов времени изменения					       */
/*состояния или режима работы вентилятора (для отладки)										    		   */
/***********************************************************************************************************/
void fan_set_on_state_changed(void (*f)(char mode, char state));
	
#define FAN_H_





#endif /* FAN_H_ */